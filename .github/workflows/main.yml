name: publish
on: 
    push:
        branches:
            - 'main'
    pull_request:
        branches:
            - '*'
    release:
        types:
            - published

env:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_NOLOGO: true
    NuGetDirectory: ${{github.workspace}}/nuget

defaults:
    run:
        shell: pwsh

jobs:
    create_nuget:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
            
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
        
        - name: GitVersion Setup
          uses: gittools/actions/gitversion/setup@v1.1.1
          with:
            versionSpec: '5.x'
        
        - name: Determine Version
          uses: gittools/actions/gitversion/execute@v1.1.1
          id: version
          with:
            useConfigFile: true
            configFilePath: GitVersion.yml
        
        - name: Use the version
          run: |
            echo ${{ env.semVer }}
        
        - run: dotnet pack --configuration Release --output ${{env.NuGetDirectory}} -p:PackageVersion=${{ env.semVer }}

        - uses: actions/upload-artifact@v4
          with:
            name: nuget
            if-no-files-found: error
            retention-days: 7
            path: ${{env.NuGetDirectory}}/*.nupkg
    
    run_tests:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
        - name: Run tests
          run: dotnet test --configuration Release
    
    deploy:
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        needs: [ run_tests, create_nuget ]
        steps:
        - uses: actions/download-artifact@v4
          with:
            name: nuget
            path: ${{env.NuGetDirectory}}
        
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v4
        
        - name: Publish NuGet package
          run: |
            foreach($file in (Get-ChildItem "${{env.NuGetDirectory}}" -Recurse -Include *.nupkg)) {
                dotnet nuget push $file --api-key "${{secrets.NUGET_APIKEY}}" --source https://api.nuget.org/v3/index.json --skip-duplicate
            }